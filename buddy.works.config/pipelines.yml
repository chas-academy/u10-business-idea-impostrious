- pipeline: "[DEV] Deploy API"
  trigger_mode: "MANUAL"
  ref_name: "develop"
  ref_type: "BRANCH"
  target_site_url: "https://impostrious-dev-api.chas.school"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: cp .env.dev .env"
    type: "BUILD"
    working_directory: "/buddy/mercury-api"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "16.04"
    execute_commands:
    - "cp ./server/deploy/.env.dev ./server/deploy/.env"
    mount_filesystem_path: "/buddy/mercury-api"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build Docker image"
    type: "DOCKERFILE"
    login: "buddy"
    password: "secure!lPpkZqDBZzCEreQHZDnZm0nYLtnZ/ociferEo0XZfgI="
    docker_image_tag: "latest"
    dockerfile_path: "server/deploy/Dockerfile.dev.deploy"
    context_path: "server/"
    repository: "impostrious-dev-api"
    registry: "registry.chas.school"
    trigger_condition: "ALWAYS"
  - action: "Deploy docker stack"
    type: "SSH_COMMAND"
    working_directory: "/"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "rm -rf ~/releases"
    - "git clone https://github.com/${BUDDY_REPO_SLUG} ~/releases/"
    - "cd ~/releases && git checkout ${BUDDY_EXECUTION_BRANCH} && cd server/deploy/"
    - "docker stack deploy --compose-file docker-stack-dev.yml --with-registry-auth ${SERVICE_NAME}"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Update docker service"
    type: "SSH_COMMAND"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "docker service update --image registry.chas.school/${API_IMAGE_NAME}:latest --with-registry-auth ${API_SERVICE}"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Sleep 10 seconds"
    type: "SLEEP"
    disabled: true
    sleep_in_sec: 10
    trigger_condition: "ALWAYS"
  - action: "Send notification via Slack"
    type: "SLACK"
    disabled: true
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "GH15DAK16"
    channel_name: "devops-ci"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"good\",\"fields\":[{\"title\":\"Successful execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 35520
  variables:
  - key: "API_IMAGE_NAME"
    value: "impostrious-dev-api"
    id: 152178
    description: ""
  - key: "API_SERVICE"
    value: "impostrious-dev-api_api"
    id: 152179
    description: ""
  - key: "DB_NAME"
    value: "impostrious-dev-api"
    id: 152180
    description: ""
  - key: "DB_PASS"
    value: "secure!feRKl4qHLFFh9gZJyzLfrwtQ0anADNZnLqygySMpiGJYhzKUIx7lzNnLzxDsH5j6"
    id: 152181
  - key: "GIT_BRANCH"
    value: "develop"
    id: 152182
    description: ""
  - key: "GIT_REPO"
    value: "git@github.com:chas-academy/u10-business-idea-impostrious.git"
    id: 152183
    description: ""
  - key: "JWT_SECRET"
    value: "secure!gboUWIeHrQUpmBVyjmGnzsByi1N/DdK1vMNiOjvrB6A="
    id: 152184
    description: ""
  - key: "SERVICE_NAME"
    value: "impostrious-dev-api"
    id: 152185
    description: ""
- pipeline: "[DEV] Deploy Client"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "develop"
  ref_type: "BRANCH"
  target_site_url: "https://impostrious-dev-client.chas.school/"
  do_not_create_commit_status: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: cat .env"
    type: "BUILD"
    working_directory: "/buddy/mercury-client"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "16.04"
    execute_commands:
    - "cp ./client/deploy/.env.dev ./client/.env"
    - "cat ./client/.env"
    mount_filesystem_path: "/buddy/mercury-client"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Execute: npm test"
    type: "BUILD"
    working_directory: "/buddy/10-business-idea-impostrious/client"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "npm install"
    - "CI=true npm test"
    mount_filesystem_path: "/buddy/10-business-idea-impostrious"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build Docker image"
    type: "DOCKERFILE"
    login: "buddy"
    password: "secure!lPpkZqDBZzCEreQHZDnZm0nYLtnZ/ociferEo0XZfgI="
    docker_image_tag: "latest"
    dockerfile_path: "client/deploy/Dockerfile.prod"
    context_path: "client/"
    repository: "impostrious-dev-client"
    registry: "registry.chas.school"
    trigger_condition: "ALWAYS"
  - action: "Deploy stack to dev"
    type: "SSH_COMMAND"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "rm -rf ~/releases"
    - "git clone https://github.com/${BUDDY_REPO_SLUG} ~/releases/"
    - "cd ~/releases && git checkout ${BUDDY_EXECUTION_BRANCH} && cd client/deploy/"
    - "cp .env.dev .env"
    - "sed -i -e 's/jwtsecretcode/${JWT_SECRET}/g' .env"
    - "cat .env"
    - "docker stack deploy --compose-file docker-stack-dev.yml --with-registry-auth impostrious-dev-client"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Update service on dev"
    type: "SSH_COMMAND"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "docker service update --image registry.chas.school/impostrious-dev-client:latest --with-registry-auth impostrious-dev-client_client"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  variables:
  - key: "JWT_SECRET"
    value: "secure!gboUWIeHrQUpmBVyjmGnzsByi1N/DdK1vMNiOjvrB6A="
    id: 152986
    description: ""
- pipeline: "[PROD] Deploy API"
  trigger_mode: "MANUAL"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://impostrious-api.chas.school"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: cp .env.prod .env"
    type: "BUILD"
    working_directory: "/buddy/mercury-api"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "16.04"
    execute_commands:
    - "cp ./server/deploy/.env.prod ./server/deploy/.env"
    mount_filesystem_path: "/buddy/mercury-api"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build Docker image"
    type: "DOCKERFILE"
    login: "buddy"
    password: "secure!lPpkZqDBZzCEreQHZDnZm0nYLtnZ/ociferEo0XZfgI="
    docker_image_tag: "latest"
    dockerfile_path: "server/deploy/Dockerfile.prod"
    context_path: "server/"
    repository: "impostrious-api"
    registry: "registry.chas.school"
    trigger_condition: "ALWAYS"
  - action: "Deploy docker stack"
    type: "SSH_COMMAND"
    working_directory: "/"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "rm -rf ~/releases"
    - "git clone https://github.com/${BUDDY_REPO_SLUG} ~/releases/"
    - "cd ~/releases && git checkout ${BUDDY_EXECUTION_BRANCH} && cd server/deploy/"
    - "docker stack deploy --compose-file docker-stack-prod.yml --with-registry-auth ${SERVICE_NAME}"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Update docker service"
    type: "SSH_COMMAND"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "docker service update --image registry.chas.school/${API_IMAGE_NAME}:latest --with-registry-auth ${API_SERVICE}"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Sleep 10 seconds"
    type: "SLEEP"
    disabled: true
    sleep_in_sec: 10
    trigger_condition: "ALWAYS"
  - action: "Send notification via Slack"
    type: "SLACK"
    disabled: true
    content: "[#${execution.id}] ${execution.pipeline.name} execution by <${invoker.html_url}|${invoker.name}>"
    channel: "GH15DAK16"
    channel_name: "devops-ci"
    attachments:
    - "{\"fallback\":\"${execution.pipeline.name} execution #${execution.id}\",\"color\":\"good\",\"fields\":[{\"title\":\"Successful execution\",\"value\":\"<${execution.html_url}|Execution #${execution.id} ${execution.comment}>\",\"short\":true},{\"title\":\"Pipeline\",\"value\":\"<${execution.pipeline.html_url}|${execution.pipeline.name}>\",\"short\":true},{\"title\":\"Branch\",\"value\":\"${execution.branch.name}\",\"short\":true},{\"title\":\"Project\",\"value\":\"<${project.html_url}|${project.name}>\",\"short\":true}]}"
    trigger_condition: "ALWAYS"
    integration_id: 35520
  variables:
  - key: "API_IMAGE_NAME"
    value: "impostrious-api"
    id: 153801
    description: ""
  - key: "API_SERVICE"
    value: "impostrious-api_api"
    id: 153802
    description: ""
  - key: "DB_NAME"
    value: "impostrious-api"
    id: 153803
    description: ""
  - key: "DB_PASS"
    value: "secure!feRKl4qHLFFh9gZJyzLfrwtQ0anADNZnLqygySMpiGJYhzKUIx7lzNnLzxDsH5j6"
    id: 153804
  - key: "GIT_BRANCH"
    value: "master"
    id: 153805
    description: ""
  - key: "GIT_REPO"
    value: "git@github.com:chas-academy/u10-business-idea-impostrious.git"
    id: 153806
    description: ""
  - key: "JWT_SECRET"
    value: "secure!gboUWIeHrQUpmBVyjmGnzsByi1N/DdK1vMNiOjvrB6A="
    id: 153807
    description: ""
  - key: "SERVICE_NAME"
    value: "impostrious-api"
    id: 153808
    description: ""
- pipeline: "[PROD] Deploy Client"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://impostrious.chas.school/"
  do_not_create_commit_status: true
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: cat .env"
    type: "BUILD"
    working_directory: "/buddy/mercury-client"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "16.04"
    execute_commands:
    - "cp ./client/deploy/.env.prod ./client/.env"
    - "cat ./client/.env"
    mount_filesystem_path: "/buddy/mercury-client"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Execute: npm test"
    type: "BUILD"
    working_directory: "/buddy/10-business-idea-impostrious/client"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "npm install"
    - "CI=true npm test"
    mount_filesystem_path: "/buddy/10-business-idea-impostrious"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build Docker image"
    type: "DOCKERFILE"
    login: "buddy"
    password: "secure!lPpkZqDBZzCEreQHZDnZm0nYLtnZ/ociferEo0XZfgI="
    docker_image_tag: "latest"
    dockerfile_path: "client/deploy/Dockerfile.prod"
    context_path: "client/"
    repository: "impostrious-client"
    registry: "registry.chas.school"
    trigger_condition: "ALWAYS"
  - action: "Deploy stack to dev"
    type: "SSH_COMMAND"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "rm -rf ~/releases"
    - "git clone https://github.com/${BUDDY_REPO_SLUG} ~/releases/"
    - "cd ~/releases && git checkout ${BUDDY_EXECUTION_BRANCH} && cd client/deploy/"
    - "cp .env.prod .env"
    - "sed -i -e 's/jwtsecretcode/${JWT_SECRET}/g' .env"
    - "cat .env"
    - "docker stack deploy --compose-file docker-stack-prod.yml --with-registry-auth impostrious-client"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Update service on dev"
    type: "SSH_COMMAND"
    login: "deploy"
    host: "104.248.251.66"
    port: "22"
    env_key: "secure!i4a5LZ6gPdm5sWsUJpD94hxv/pav7nMyJLuqW/N2fXo="
    authentication_mode: "ENV_KEY"
    commands:
    - "docker service update --image registry.chas.school/impostrious-client:latest --with-registry-auth impostrious-client_client"
    run_as_script: true
    shell: "BASH"
    trigger_condition: "ALWAYS"
  variables:
  - key: "JWT_SECRET"
    value: "secure!gboUWIeHrQUpmBVyjmGnzsByi1N/DdK1vMNiOjvrB6A="
    id: 153810
    description: ""
- pipeline: "[DEV] Deploy API Tests"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "develop"
  ref_type: "BRANCH"
  target_site_url: "https://impostrious-dev-api.chas.school"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: cp .env.dev .env"
    type: "BUILD"
    working_directory: "/buddy/mercury-api"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "16.04"
    execute_commands:
    - "cp ./server/deploy/.env.dev ./server/deploy/.env"
    mount_filesystem_path: "/buddy/mercury-api"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build Docker image"
    type: "DOCKERFILE"
    password: "secure!lPpkZqDBZzCEreQHZDnZm0nYLtnZ/ociferEo0XZfgI="
    dockerfile_path: "server/deploy/Dockerfile.dev.tests"
    context_path: "server/"
    trigger_condition: "ALWAYS"
  - action: "Execute: npm test"
    type: "BUILD"
    working_directory: "/buddy/10-business-idea-impostrious"
    use_image_from_action: true
    execute_commands:
    - "cd server"
    - "ls -al"
    - "npm install"
    - "npm run test"
    services:
    - type: "CUSTOM"
      connection:
        host: "database"
      docker_image_name: "library/mongo"
      docker_image_tag: "latest"
      working_directory: "/app/docker-entrypoint-initdb.d"
      mount_filesystem_path: "/buddy/10-business-idea-impostrious"
    mount_filesystem_path: "/buddy/10-business-idea-impostrious"
    shell: "SH"
    trigger_condition: "ALWAYS"
    variables:
    - id: 160509
      key: "MONGO_INITDB_ROOT_PASSWORD"
      value: "password"
      description: ""
    - id: 160510
      key: "MONGO_INITDB_ROOT_USERNAME"
      value: "admin"
      description: ""
    - id: 160499
      key: "NODE_ENV"
      value: "testing"
      description: ""
  - action: "Run 10-business-idea-impostrious/[DEV] Deploy API"
    type: "RUN_NEXT_PIPELINE"
    comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    revision: "INHERIT"
    trigger_condition: "ALWAYS"
    next_project_name: "10-business-idea-impostrious"
    next_pipeline_name: "[DEV] Deploy API"
  variables:
  - key: "MONGO_TEST_CONNECTION"
    value: "mongodb://database:27017/database"
    id: 160543
    description: ""
- pipeline: "[PROD] Deploy API Tests"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  ref_type: "BRANCH"
  target_site_url: "https://impostrious-api.chas.school"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Execute: cp .env.dev .env"
    type: "BUILD"
    working_directory: "/buddy/mercury-api"
    docker_image_name: "library/ubuntu"
    docker_image_tag: "16.04"
    execute_commands:
    - "cp ./server/deploy/.env.dev ./server/deploy/.env"
    mount_filesystem_path: "/buddy/mercury-api"
    shell: "BASH"
    trigger_condition: "ALWAYS"
  - action: "Build Docker image"
    type: "DOCKERFILE"
    password: "secure!lPpkZqDBZzCEreQHZDnZm0nYLtnZ/ociferEo0XZfgI="
    dockerfile_path: "server/deploy/Dockerfile.dev.tests"
    context_path: "server/"
    trigger_condition: "ALWAYS"
  - action: "Execute: npm test"
    type: "BUILD"
    working_directory: "/buddy/10-business-idea-impostrious"
    use_image_from_action: true
    execute_commands:
    - "cd server"
    - "ls -al"
    - "npm install"
    - "npm run test"
    services:
    - type: "CUSTOM"
      connection:
        host: "database"
      docker_image_name: "library/mongo"
      docker_image_tag: "latest"
      working_directory: "/app/docker-entrypoint-initdb.d"
      mount_filesystem_path: "/buddy/10-business-idea-impostrious"
    mount_filesystem_path: "/buddy/10-business-idea-impostrious"
    shell: "SH"
    trigger_condition: "ALWAYS"
    variables:
    - id: 161105
      key: "MONGO_INITDB_ROOT_PASSWORD"
      value: "password"
      description: ""
    - id: 161106
      key: "MONGO_INITDB_ROOT_USERNAME"
      value: "admin"
      description: ""
    - id: 161107
      key: "NODE_ENV"
      value: "testing"
      description: ""
  - action: "Run 10-business-idea-impostrious/[PROD] Deploy API"
    type: "RUN_NEXT_PIPELINE"
    comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
    revision: "INHERIT"
    trigger_condition: "ALWAYS"
    next_project_name: "10-business-idea-impostrious"
    next_pipeline_name: "[PROD] Deploy API"
  variables:
  - key: "MONGO_TEST_CONNECTION"
    value: "mongodb://database:27017/database"
    id: 161115
    description: ""
  - key: "SERVICE_NAME"
    value: "impostrious-dev-api"
    id: 161116
    description: ""